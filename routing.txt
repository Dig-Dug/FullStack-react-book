What´s an URL?

url <- external keeper of state
1.Modify location of app(url)   
2.Specify which React component to render at a given location

React Router´s core components________________
* Links and Redirect! <- React Components 
* Determine where to render <- Route and Switch

Building the Components of react-router______________
Building route_____________________________    
cd basics/src/App.js

cd basics/src/complete/App-1.js

Building Link-----------------------
manually updating browser location. <- check https://developer.mozilla.org/en-US/docs/Web/API/History_API

cd routing/basics/package.json <- "history": "4.3.0"
cd routing/basics/src/complete/App-2.js

Building Router---------------------------      
needsTo: supply children with location and history(use context)
         Re-render app when history changes.(componentDidMount 
         needs to be relocated)

cd routing/basics/src/complete/App-3.js

Building Redirect---------------------------
-like link but modifies location whenever is rendered(need "to" prop,
history(to modify browser´s location) from context)

cd routing/basics/src/complete/App-4.js

Using react-router(library(several npm´s))-------------------------------
in App.js(import React from "react"(takes care history management)
   , (createHistory <= removeIt!!!))

cd routing/basics/src/complete/App-5.js

More Route--------------------------------

Route(limitations(matching && location));

USING Switch--------------------------------
-only(match.location(exact match && ignore(other paths)));
-Switch(imported);
cd routing/basics/src/complete/App-7.js

https://v5.reactrouter.com/web/api/Route

Dynamic routing with React Router--------------------------------
cd routing/music
// npm i, cd client, npm i, cd .., npm start
//not working :(  https://stackoverflow.com/questions/47612580/react-scripts-command-not-found


The Server´s API--------------------------------
 POST/api/login:

 server(/api/login){
    token == api/login;
    token.require(enpoint(api/albums))
    return token;
 }

see --> music/server.js

Starting point of the app--------------------------------
goto -> routing/music/client/src/index.js
 goto -> client/src/components.
 goto -> client/src/components/App.js
 goto -> client/src/components/AlbumsContainer.js

Using URL params--------------------------------
goto -> client/src/components-complete/App-1.js

Propagating pathnames as props-----------------
go to -> client/src/components-complete/Album-1.j

Dynamic menu items with NavLink----------------
go to -> client/src/components-complete/VerticalMenu-3.j

Adding a redirect for the root path--------------
go to -> client/src/components-complete/App-3.js

Supporting asuthenticated routes----------------
  -request API endpoint

The Client library--------------------------------
go to -> client/src/Client.js

Implementing login--------------------------------
go to -> client/src/components-complete/Login-1.js

PrivateRoute, a higher order component---------------
redirect users which arent logged in, a higher-order component is 
a React component that wraps another one.
goto -> client/src/components-complete/App-5.js

Redirect state--------------------------------
*login needs to know where the user came from and logging it right there
goto PrivateRoute.js

MORE HERE: https://reactrouter.com/
      
pg 469







