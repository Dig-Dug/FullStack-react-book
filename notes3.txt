****Advanced Component Configuration with (props,state,children)******

Instrucctions:
    -cd advanced-components/cd components-cookbook
    -npm install
    -npm start  goto localhost:3000



ReactComponent________2 Ways________

a.  const App = React.createClass({render!!!: function(){}}) 
    bsp.
        render: function(){return(<h1>Yellow</h1>)}  <-virtualRepresentation


b.  class App extends React.Component{render!!!(){}}
    bsp.
        render(){return(<h1>Yellow</h1>)}  <-virtualRepresentation


Render returns ReactElement Tree___________________

render = virtualRepresentation(Dom native(Component))


Getting Data into render()______________________________
props= immutable, state != immutable 
--parent.pass(props).to(children)
--holdData.local(state).to(Component)

Props  (props,props)_______________Parameters_________
passData.Component == this.props

    bsp.
    . <div><Header *headerText*="YOlo"/></div>
    . render(){return(<h1>{***this.props.headerText***}</h1>)}

// class using props.headerText(canÂ´t change it) only passing it to childen
   . Component.pass(props).to(children)


   PropTypes_____________in package.json______________________________
   .string,number,boolean
   .function,object,array,arrayOf,node,element


Default props with getDefaultProps:________________________________
  bsp.(in class):
        -static defaultProps = {initialValue: 1}
        -<Counter initialValue={1}/>



Context_(experimental)______________________________________________________
    pass(prop(**Global**==Component.to(Component))) == mutable(Global);
 
 define(Context){ parentClass.owns(childContextTypes & getChildContext)};

//parent.passContext(static.-**childContextTypes**) <- check jpeg
   -childContextTypes = !populate(justRepresent);
   -getChildContext(valueSetting(functionReturning)); <- check jpeg

//child.getContext(use.contextTypes)  <- check jpeg


STATE______________________________________________________________




pg 170