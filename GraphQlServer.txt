pg 621 <---set up for windows users....

http://expressjs.com/

goto --> graphiql-server index.js

remember nodemon package for constant updates.

Adding first GraphQl Types-----------------------------------------------------
pg 624 for setting up.
gotot --> graphql-server server.js (line 21)

--Schemas:
http://spec.graphql.org/


Mutation.-----------------------------------------------------------------------
"Crud" <- mutation
goto --> graphql-server server.js (line 11)

Rich Schemas and SQL-----------------------------------------------------------
https://github.com/brianc/node-sql
https://github.com/mapbox/node-sqlite3  
packages used for example.

have a look on: src/tables.js


Schema Design---------------------------------------------------------------
 goto src/types.js



Lists-------------------------------------------------------------------------
goto types.js line 56

Perfomance: look-ahead optimizations.----------------------------------------
goto server_friends_ids_efficient.js line 22.


Lists Continued-------------------------------------------------------------------------
right now we have a list of friends ids. We need to get a list of their
full User types. Goto server.js line 42

Connections..-------------------------------------------------------------------------
instead of lists, return chunks of fields.
goto types_permissions.js line 33

using cursors for pagination prevents all kind of frontend bugs and
constant updates, helps with RelayÂ´s leverage.

Authentication-------------------------------------------------------------------------
-posts friends privacy
https://en.wikipedia.org/wiki/Basic_access_authentication
options: cookies, JSON web tokens, OAuth.
in example NodeJs server/express and basicAuth imports.
check server_auth.js line 66.

Authorization-------------------------------------------------------------------------
request.user property forward to GraphQl resolver --> server.js line 103
add viewer field --> server.js line 28
load each post from db before use, adding select arguments --> loaders.js line 120

Rich Mutations-------------------------------------------------------------------------
changing data from server. 
example new post(string,body ,friendship privacy level)
server.js line 49

Relay and GraphQL-------------------------------------------------------------------------
lightweight GraphQL server https://github.com/graphql/graphql-relay-js
goto types_scalar.js line 26
 
library to create loaders(oblects for batching data fetching)
https://github.com/graphql/dataloader

https://github.com/rmosolgo/graphql-ruby
https://github.com/graphql-python/graphene
https://github.com/sangria-graphql/sangria
https://www.apollographql.com/docs/
https://github.com/RisingStack/graffiti-mongoose














